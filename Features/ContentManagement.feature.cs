// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace HelloBear.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ContentManagement")]
    public partial class ContentManagementFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "ContentManagement.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "ContentManagement", "This feature contains all the scenarios for content management", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
#line hidden
#line 6
 testRunner.Given("I have accessed to the Admin Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 7
 testRunner.Then("the Login screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 8
 testRunner.When("I login as an Admin", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 9
 testRunner.Then("the Home screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CM01 - The admin user adds a new book")]
        [NUnit.Framework.CategoryAttribute("contentmanagement")]
        public void CM01_TheAdminUserAddsANewBook()
        {
            string[] tagsOfScenario = new string[] {
                    "contentmanagement"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CM01 - The admin user adds a new book", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 12
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 13
 testRunner.When("I select the Content Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 14
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 15
 testRunner.When("I select Add Book button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 16
 testRunner.Then("the Add Book screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "ShortName",
                            "Description"});
                table7.AddRow(new string[] {
                            "Automation",
                            "AU",
                            "Book created by automation"});
#line 17
 testRunner.When("I add a new book as below", ((string)(null)), table7, "When ");
#line hidden
#line 20
 testRunner.Then("the Book thumbnail should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 21
 testRunner.When("I click Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 22
 testRunner.Then("the Saved message should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 23
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 24
 testRunner.When("I search for the book \'Automation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 25
 testRunner.Then("the book \'Automation\' should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CM02 - The admin user edits a book")]
        [NUnit.Framework.CategoryAttribute("contentmanagement")]
        public void CM02_TheAdminUserEditsABook()
        {
            string[] tagsOfScenario = new string[] {
                    "contentmanagement"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CM02 - The admin user edits a book", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 29
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 30
 testRunner.When("I select the Content Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 31
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 32
 testRunner.When("I select Add Book button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 33
 testRunner.Then("the Add Book screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "ShortName",
                            "Description"});
                table8.AddRow(new string[] {
                            "Automation",
                            "AU",
                            "Book created by automation"});
#line 34
 testRunner.When("I add a new book as below", ((string)(null)), table8, "When ");
#line hidden
#line 37
 testRunner.Then("the Book thumbnail should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 38
 testRunner.When("I click Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 39
 testRunner.Then("the Saved message should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 40
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 41
 testRunner.When("I search for the book \'Automation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 42
 testRunner.Then("the book \'Automation\' should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 43
 testRunner.When("I edit the book \'Automation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "ShortName",
                            "Description"});
                table9.AddRow(new string[] {
                            "Automation",
                            "AU",
                            "Book created by automation"});
#line 44
 testRunner.Then("the book detail screen should display as below", ((string)(null)), table9, "Then ");
#line hidden
#line 47
 testRunner.Then("the Short Name field should be disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 48
 testRunner.When("I input \'Modified\' into Book Name field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 49
 testRunner.When("I input \'Modified\' into Book Description field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 50
 testRunner.When("I click Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 51
 testRunner.Then("the Saved message should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 52
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 53
 testRunner.When("I search for the book \'AutomationModified\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 54
 testRunner.Then("the book \'AutomationModified\' should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CM03 - The admin user deletes a book")]
        [NUnit.Framework.CategoryAttribute("contentmanagement")]
        public void CM03_TheAdminUserDeletesABook()
        {
            string[] tagsOfScenario = new string[] {
                    "contentmanagement"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CM03 - The admin user deletes a book", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 58
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 59
 testRunner.When("I select the Content Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 60
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 61
 testRunner.When("I select Add Book button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 62
 testRunner.Then("the Add Book screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "ShortName",
                            "Description"});
                table10.AddRow(new string[] {
                            "Automation",
                            "AU",
                            "Book created by automation"});
#line 63
 testRunner.When("I add a new book as below", ((string)(null)), table10, "When ");
#line hidden
#line 66
 testRunner.Then("the Book thumbnail should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 67
 testRunner.When("I click Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 68
 testRunner.Then("the Saved message should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 69
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 70
 testRunner.When("I search for the book \'Automation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 71
 testRunner.Then("the book \'Automation\' should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 72
 testRunner.When("I delete the book \'Automation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 73
 testRunner.Then("the Delete Confirmation popup should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 74
 testRunner.When("I select No in the popup", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 75
 testRunner.Then("the Delete Confirmation popup should dismiss", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 76
 testRunner.When("I delete the book \'Automation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 77
 testRunner.Then("the Delete Confirmation popup should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 78
 testRunner.When("I select Yes in the popup", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 79
 testRunner.Then("the book \'Automation\' should be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 80
 testRunner.When("I search for the book \'AutoBook\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 81
 testRunner.Then("the book \'AutoBook\' should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 82
 testRunner.Then("the Delete option should not show on the book \'AutoBook\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CM04 - The validation on the book detail")]
        [NUnit.Framework.CategoryAttribute("contentmanagement")]
        public void CM04_TheValidationOnTheBookDetail()
        {
            string[] tagsOfScenario = new string[] {
                    "contentmanagement"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CM04 - The validation on the book detail", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 86
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 87
 testRunner.When("I select the Content Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 88
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 89
 testRunner.When("I select Add Book button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 90
 testRunner.Then("the Add Book screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 91
 testRunner.When("I click Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 92
 testRunner.Then("the validation message for Book Name field should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 93
 testRunner.Then("the validation message for Short Name field should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 94
 testRunner.When("I input \'Automation\' into Book Name field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 95
 testRunner.When("I input \'AB\' into Book Short Name field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 96
 testRunner.When("I click Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 97
 testRunner.Then("the validation message for Duplicated Short Name should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CM05 - The user adds new unit to a book")]
        [NUnit.Framework.CategoryAttribute("contentmanagement")]
        public void CM05_TheUserAddsNewUnitToABook()
        {
            string[] tagsOfScenario = new string[] {
                    "contentmanagement"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CM05 - The user adds new unit to a book", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 101
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 102
 testRunner.When("I select the Content Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 103
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 104
 testRunner.When("I select Add Book button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 105
 testRunner.Then("the Add Book screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "ShortName",
                            "Description"});
                table11.AddRow(new string[] {
                            "Automation",
                            "AU",
                            "Book created by automation"});
#line 106
 testRunner.When("I add a new book as below", ((string)(null)), table11, "When ");
#line hidden
#line 109
 testRunner.Then("the Book thumbnail should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 110
 testRunner.When("I click Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 111
 testRunner.Then("the Saved message should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 112
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 113
 testRunner.When("I search for the book \'Automation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 114
 testRunner.Then("the book \'Automation\' should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 115
 testRunner.When("I edit the book \'Automation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "ShortName",
                            "Description"});
                table12.AddRow(new string[] {
                            "Automation",
                            "AU",
                            "Book created by automation"});
#line 116
 testRunner.Then("the book detail screen should display as below", ((string)(null)), table12, "Then ");
#line hidden
#line 119
 testRunner.Then("the Unit section should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "LanguageFocus",
                            "Number",
                            "Phonics",
                            "Description"});
                table13.AddRow(new string[] {
                            "Automation 1",
                            "English",
                            "Unit 1",
                            "həˈlō",
                            "Created by automation"});
                table13.AddRow(new string[] {
                            "Automation 2",
                            "English",
                            "Unit 2",
                            "həˈlō",
                            "Created by automation"});
                table13.AddRow(new string[] {
                            "Automation 3",
                            "English",
                            "Unit 3",
                            "həˈlō",
                            "Created by automation"});
#line 120
 testRunner.When("I add a new unit as below", ((string)(null)), table13, "When ");
#line hidden
                TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Number",
                            "Description"});
                table14.AddRow(new string[] {
                            "Automation 1",
                            "Unit 1",
                            "Created by automation"});
                table14.AddRow(new string[] {
                            "Automation 2",
                            "Unit 2",
                            "Created by automation"});
                table14.AddRow(new string[] {
                            "Automation 3",
                            "Unit 3",
                            "Created by automation"});
#line 125
 testRunner.Then("the Unit List of the book should display as below", ((string)(null)), table14, "Then ");
#line hidden
#line 130
 testRunner.When("I search for the unit \'Automation 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 131
 testRunner.Then("the unit \'Automation 1\' should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CM06 - The validation on the unit detail")]
        [NUnit.Framework.CategoryAttribute("contentmanagement")]
        public void CM06_TheValidationOnTheUnitDetail()
        {
            string[] tagsOfScenario = new string[] {
                    "contentmanagement"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CM06 - The validation on the unit detail", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 135
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 136
 testRunner.When("I select the Content Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 137
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 138
 testRunner.When("I select Add Book button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 139
 testRunner.Then("the Add Book screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "ShortName",
                            "Description"});
                table15.AddRow(new string[] {
                            "Automation",
                            "AU",
                            "Book created by automation"});
#line 140
 testRunner.When("I add a new book as below", ((string)(null)), table15, "When ");
#line hidden
#line 143
 testRunner.Then("the Book thumbnail should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 144
 testRunner.When("I click Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 145
 testRunner.Then("the Saved message should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 146
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 147
 testRunner.When("I search for the book \'Automation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 148
 testRunner.Then("the book \'Automation\' should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 149
 testRunner.When("I edit the book \'Automation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "ShortName",
                            "Description"});
                table16.AddRow(new string[] {
                            "Automation",
                            "AU",
                            "Book created by automation"});
#line 150
 testRunner.Then("the book detail screen should display as below", ((string)(null)), table16, "Then ");
#line hidden
#line 153
 testRunner.Then("the Unit section should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 154
 testRunner.When("I select Add Unit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 155
 testRunner.Then("the Add Unit screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 156
 testRunner.When("I click Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 157
 testRunner.Then("the validation message for the Unit Name should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 158
 testRunner.Then("the validation message for the Unit Number should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 159
 testRunner.Then("the validation message for the Language Focus should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 160
 testRunner.Then("the validation message for the Phonics should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CM07 - The user edits an unit of a book")]
        [NUnit.Framework.CategoryAttribute("contentmanagement")]
        public void CM07_TheUserEditsAnUnitOfABook()
        {
            string[] tagsOfScenario = new string[] {
                    "contentmanagement"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CM07 - The user edits an unit of a book", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 164
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 165
 testRunner.When("I select the Content Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 166
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 167
 testRunner.When("I select Add Book button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 168
 testRunner.Then("the Add Book screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "ShortName",
                            "Description"});
                table17.AddRow(new string[] {
                            "Automation",
                            "AU",
                            "Book created by automation"});
#line 169
 testRunner.When("I add a new book as below", ((string)(null)), table17, "When ");
#line hidden
#line 172
 testRunner.Then("the Book thumbnail should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 173
 testRunner.When("I click Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 174
 testRunner.Then("the Saved message should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 175
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 176
 testRunner.When("I search for the book \'Automation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 177
 testRunner.Then("the book \'Automation\' should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 178
 testRunner.When("I edit the book \'Automation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "ShortName",
                            "Description"});
                table18.AddRow(new string[] {
                            "Automation",
                            "AU",
                            "Book created by automation"});
#line 179
 testRunner.Then("the book detail screen should display as below", ((string)(null)), table18, "Then ");
#line hidden
#line 182
 testRunner.Then("the Unit section should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "LanguageFocus",
                            "Number",
                            "Phonics",
                            "Description"});
                table19.AddRow(new string[] {
                            "Automation 1",
                            "English",
                            "Unit 1",
                            "həˈlō",
                            "Created by automation"});
#line 183
 testRunner.When("I add a new unit as below", ((string)(null)), table19, "When ");
#line hidden
                TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Number",
                            "Description"});
                table20.AddRow(new string[] {
                            "Automation 1",
                            "Unit 1",
                            "Created by automation"});
#line 186
 testRunner.Then("the Unit List of the book should display as below", ((string)(null)), table20, "Then ");
#line hidden
#line 189
 testRunner.When("I search for the unit \'Automation 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 190
 testRunner.Then("the unit \'Automation 1\' should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 191
 testRunner.When("I edit the unit \'Automation 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "LanguageFocus",
                            "Number",
                            "Phonics",
                            "Description"});
                table21.AddRow(new string[] {
                            "Automation 1",
                            "English",
                            "Unit 1",
                            "həˈlō",
                            "Created by automation"});
#line 192
 testRunner.Then("unit detail page should display as below", ((string)(null)), table21, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "LanguageFocus",
                            "Number",
                            "Phonics",
                            "Description"});
                table22.AddRow(new string[] {
                            "Automation 1 Edit",
                            "English Edit",
                            "Unit 1 Edit",
                            "həˈlō",
                            "Created by automation"});
#line 195
 testRunner.When("I change the unit detail as below", ((string)(null)), table22, "When ");
#line hidden
                TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Number",
                            "Description"});
                table23.AddRow(new string[] {
                            "Automation 1 Edit",
                            "Unit 1 Edit",
                            "Created by automation"});
#line 198
 testRunner.Then("the Unit List of the book should display as below", ((string)(null)), table23, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CM08 - The user adds new contents for a unit")]
        [NUnit.Framework.CategoryAttribute("contentmanagement")]
        public void CM08_TheUserAddsNewContentsForAUnit()
        {
            string[] tagsOfScenario = new string[] {
                    "contentmanagement"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CM08 - The user adds new contents for a unit", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 204
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 205
 testRunner.When("I select the Content Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 206
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 207
 testRunner.When("I select Add Book button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 208
 testRunner.Then("the Add Book screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "ShortName",
                            "Description"});
                table24.AddRow(new string[] {
                            "Automation",
                            "AU",
                            "Book created by automation"});
#line 209
 testRunner.When("I add a new book as below", ((string)(null)), table24, "When ");
#line hidden
#line 212
 testRunner.Then("the Book thumbnail should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 213
 testRunner.When("I click Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 214
 testRunner.Then("the Saved message should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 215
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 216
 testRunner.When("I search for the book \'Automation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 217
 testRunner.Then("the book \'Automation\' should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 218
 testRunner.When("I edit the book \'Automation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "ShortName",
                            "Description"});
                table25.AddRow(new string[] {
                            "Automation",
                            "AU",
                            "Book created by automation"});
#line 219
 testRunner.Then("the book detail screen should display as below", ((string)(null)), table25, "Then ");
#line hidden
#line 222
 testRunner.Then("the Unit section should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "LanguageFocus",
                            "Number",
                            "Phonics",
                            "Description"});
                table26.AddRow(new string[] {
                            "Automation 1",
                            "English",
                            "Unit 1",
                            "həˈlō",
                            "Created by automation"});
#line 223
 testRunner.When("I add a new unit as below", ((string)(null)), table26, "When ");
#line hidden
                TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Number",
                            "Description"});
                table27.AddRow(new string[] {
                            "Automation 1",
                            "Unit 1",
                            "Created by automation"});
#line 226
 testRunner.Then("the Unit List of the book should display as below", ((string)(null)), table27, "Then ");
#line hidden
#line 229
 testRunner.When("I search for the unit \'Automation 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 230
 testRunner.Then("the unit \'Automation 1\' should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 231
 testRunner.When("I edit the unit \'Automation 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "LanguageFocus",
                            "Number",
                            "Phonics",
                            "Description"});
                table28.AddRow(new string[] {
                            "Automation 1",
                            "English",
                            "Unit 1",
                            "həˈlō",
                            "Created by automation"});
#line 232
 testRunner.Then("unit detail page should display as below", ((string)(null)), table28, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Type",
                            "PageNumber",
                            "Link",
                            "Description"});
                table29.AddRow(new string[] {
                            "Automation Content 1",
                            "Read",
                            "1",
                            "https://youtube.com",
                            "Created by automation"});
                table29.AddRow(new string[] {
                            "Automation Content 2",
                            "Music",
                            "2",
                            "https://youtube.com",
                            "Created by automation"});
                table29.AddRow(new string[] {
                            "Automation Content 3",
                            "Video",
                            "3",
                            "https://youtube.com",
                            "Created by automation"});
                table29.AddRow(new string[] {
                            "Automation Content 4",
                            "Game",
                            "4",
                            "https://youtube.com",
                            "Created by automation"});
                table29.AddRow(new string[] {
                            "Automation Content 5",
                            "PushAndListen",
                            "5",
                            "",
                            "Created by automation"});
#line 235
 testRunner.When("I add a new content as below", ((string)(null)), table29, "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CM09 - The book and unit is populated correctly in content detail")]
        [NUnit.Framework.CategoryAttribute("contentmanagement")]
        public void CM09_TheBookAndUnitIsPopulatedCorrectlyInContentDetail()
        {
            string[] tagsOfScenario = new string[] {
                    "contentmanagement"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CM09 - The book and unit is populated correctly in content detail", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 246
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 247
 testRunner.When("I select the Content Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 248
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 249
 testRunner.When("I select Add Book button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 250
 testRunner.Then("the Add Book screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "ShortName",
                            "Description"});
                table30.AddRow(new string[] {
                            "Automation",
                            "AU",
                            "Book created by automation"});
#line 251
 testRunner.When("I add a new book as below", ((string)(null)), table30, "When ");
#line hidden
#line 254
 testRunner.Then("the Book thumbnail should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 255
 testRunner.When("I click Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 256
 testRunner.Then("the Saved message should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 257
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 258
 testRunner.When("I search for the book \'Automation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 259
 testRunner.Then("the book \'Automation\' should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 260
 testRunner.When("I edit the book \'Automation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "ShortName",
                            "Description"});
                table31.AddRow(new string[] {
                            "Automation",
                            "AU",
                            "Book created by automation"});
#line 261
 testRunner.Then("the book detail screen should display as below", ((string)(null)), table31, "Then ");
#line hidden
#line 264
 testRunner.Then("the Unit section should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "LanguageFocus",
                            "Number",
                            "Phonics",
                            "Description"});
                table32.AddRow(new string[] {
                            "Automation 1",
                            "English",
                            "Unit 1",
                            "həˈlō",
                            "Created by automation"});
#line 265
 testRunner.When("I add a new unit as below", ((string)(null)), table32, "When ");
#line hidden
                TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Number",
                            "Description"});
                table33.AddRow(new string[] {
                            "Automation 1",
                            "Unit 1",
                            "Created by automation"});
#line 268
 testRunner.Then("the Unit List of the book should display as below", ((string)(null)), table33, "Then ");
#line hidden
#line 271
 testRunner.When("I search for the unit \'Automation 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 272
 testRunner.Then("the unit \'Automation 1\' should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 273
 testRunner.When("I edit the unit \'Automation 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "LanguageFocus",
                            "Number",
                            "Phonics",
                            "Description"});
                table34.AddRow(new string[] {
                            "Automation 1",
                            "English",
                            "Unit 1",
                            "həˈlō",
                            "Created by automation"});
#line 274
 testRunner.Then("unit detail page should display as below", ((string)(null)), table34, "Then ");
#line hidden
#line 277
 testRunner.When("I select Add Content button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 278
 testRunner.Then("the Add Content screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 279
 testRunner.Then("the Book Name and Unit Name should be populated correctly", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CM10 - The validation on the content detail")]
        [NUnit.Framework.CategoryAttribute("contentmanagement")]
        public void CM10_TheValidationOnTheContentDetail()
        {
            string[] tagsOfScenario = new string[] {
                    "contentmanagement"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CM10 - The validation on the content detail", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 283
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 284
 testRunner.When("I select the Content Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 285
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 286
 testRunner.When("I select Add Book button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 287
 testRunner.Then("the Add Book screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "ShortName",
                            "Description"});
                table35.AddRow(new string[] {
                            "Automation",
                            "AU",
                            "Book created by automation"});
#line 288
 testRunner.When("I add a new book as below", ((string)(null)), table35, "When ");
#line hidden
#line 291
 testRunner.Then("the Book thumbnail should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 292
 testRunner.When("I click Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 293
 testRunner.Then("the Saved message should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 294
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 295
 testRunner.When("I search for the book \'Automation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 296
 testRunner.Then("the book \'Automation\' should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 297
 testRunner.When("I edit the book \'Automation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "ShortName",
                            "Description"});
                table36.AddRow(new string[] {
                            "Automation",
                            "AU",
                            "Book created by automation"});
#line 298
 testRunner.Then("the book detail screen should display as below", ((string)(null)), table36, "Then ");
#line hidden
#line 301
 testRunner.Then("the Unit section should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "LanguageFocus",
                            "Number",
                            "Phonics",
                            "Description"});
                table37.AddRow(new string[] {
                            "Automation 1",
                            "English",
                            "Unit 1",
                            "həˈlō",
                            "Created by automation"});
#line 302
 testRunner.When("I add a new unit as below", ((string)(null)), table37, "When ");
#line hidden
                TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Number",
                            "Description"});
                table38.AddRow(new string[] {
                            "Automation 1",
                            "Unit 1",
                            "Created by automation"});
#line 305
 testRunner.Then("the Unit List of the book should display as below", ((string)(null)), table38, "Then ");
#line hidden
#line 308
 testRunner.When("I search for the unit \'Automation 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 309
 testRunner.Then("the unit \'Automation 1\' should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 310
 testRunner.When("I edit the unit \'Automation 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "LanguageFocus",
                            "Number",
                            "Phonics",
                            "Description"});
                table39.AddRow(new string[] {
                            "Automation 1",
                            "English",
                            "Unit 1",
                            "həˈlō",
                            "Created by automation"});
#line 311
 testRunner.Then("unit detail page should display as below", ((string)(null)), table39, "Then ");
#line hidden
#line 314
 testRunner.When("I select Add Content button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 315
 testRunner.Then("the Add Content screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 316
 testRunner.When("I click Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 317
 testRunner.Then("the validation message for Content Name field should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 318
 testRunner.Then("the validation message for Page Number field should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 319
 testRunner.Then("the validation message for Youtube Link field should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 320
 testRunner.Then("the validation message for Page Image should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CM11 - The user adds and configure Push Listen content")]
        [NUnit.Framework.CategoryAttribute("contentmanagement")]
        public void CM11_TheUserAddsAndConfigurePushListenContent()
        {
            string[] tagsOfScenario = new string[] {
                    "contentmanagement"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CM11 - The user adds and configure Push Listen content", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 324
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 325
 testRunner.When("I select the Content Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 326
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 327
 testRunner.When("I select Add Book button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 328
 testRunner.Then("the Add Book screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "ShortName",
                            "Description"});
                table40.AddRow(new string[] {
                            "Automation",
                            "AU",
                            "Book created by automation"});
#line 329
 testRunner.When("I add a new book as below", ((string)(null)), table40, "When ");
#line hidden
#line 332
 testRunner.Then("the Book thumbnail should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 333
 testRunner.When("I click Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 334
 testRunner.Then("the Saved message should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 335
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 336
 testRunner.When("I search for the book \'Automation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 337
 testRunner.Then("the book \'Automation\' should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 338
 testRunner.When("I edit the book \'Automation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "ShortName",
                            "Description"});
                table41.AddRow(new string[] {
                            "Automation",
                            "AU",
                            "Book created by automation"});
#line 339
 testRunner.Then("the book detail screen should display as below", ((string)(null)), table41, "Then ");
#line hidden
#line 342
 testRunner.Then("the Unit section should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "LanguageFocus",
                            "Number",
                            "Phonics",
                            "Description"});
                table42.AddRow(new string[] {
                            "Automation 1",
                            "English",
                            "Unit 1",
                            "həˈlō",
                            "Created by automation"});
#line 343
 testRunner.When("I add a new unit as below", ((string)(null)), table42, "When ");
#line hidden
                TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Number",
                            "Description"});
                table43.AddRow(new string[] {
                            "Automation 1",
                            "Unit 1",
                            "Created by automation"});
#line 346
 testRunner.Then("the Unit List of the book should display as below", ((string)(null)), table43, "Then ");
#line hidden
#line 349
 testRunner.When("I search for the unit \'Automation 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 350
 testRunner.Then("the unit \'Automation 1\' should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 351
 testRunner.When("I edit the unit \'Automation 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "LanguageFocus",
                            "Number",
                            "Phonics",
                            "Description"});
                table44.AddRow(new string[] {
                            "Automation 1",
                            "English",
                            "Unit 1",
                            "həˈlō",
                            "Created by automation"});
#line 352
 testRunner.Then("unit detail page should display as below", ((string)(null)), table44, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Type",
                            "PageNumber",
                            "Description"});
                table45.AddRow(new string[] {
                            "Automation Content 1",
                            "PushAndListen",
                            "1",
                            "Created by automation"});
#line 355
 testRunner.When("I add a new content as below", ((string)(null)), table45, "When ");
#line hidden
#line 358
 testRunner.When("I edit the content \'Automation Content 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Type",
                            "PageNumber",
                            "Description"});
                table46.AddRow(new string[] {
                            "Automation Content 1",
                            "PushAndListen",
                            "1",
                            "Created by automation"});
#line 359
 testRunner.Then("content detail screen should display as below", ((string)(null)), table46, "Then ");
#line hidden
#line 362
 testRunner.Then("the Push & Listen configuration section should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Audio"});
                table47.AddRow(new string[] {
                            "Automation 1",
                            "https://youtube.com"});
                table47.AddRow(new string[] {
                            "Automation 2",
                            "https://youtube.com"});
                table47.AddRow(new string[] {
                            "Automation 3",
                            "https://youtube.com"});
#line 363
 testRunner.When("I configure the Push & Listen on the image as below", ((string)(null)), table47, "When ");
#line hidden
#line 368
 testRunner.Then("the grid configuration asset should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 369
 testRunner.Then("the bounding box should display on the image", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CM12 - The user edits and delete a configuration asset of Push Listen content")]
        [NUnit.Framework.CategoryAttribute("contentmanagement")]
        public void CM12_TheUserEditsAndDeleteAConfigurationAssetOfPushListenContent()
        {
            string[] tagsOfScenario = new string[] {
                    "contentmanagement"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CM12 - The user edits and delete a configuration asset of Push Listen content", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 373
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 374
 testRunner.When("I select the Content Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 375
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 376
 testRunner.When("I select Add Book button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 377
 testRunner.Then("the Add Book screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "ShortName",
                            "Description"});
                table48.AddRow(new string[] {
                            "Automation",
                            "AU",
                            "Book created by automation"});
#line 378
 testRunner.When("I add a new book as below", ((string)(null)), table48, "When ");
#line hidden
#line 381
 testRunner.Then("the Book thumbnail should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 382
 testRunner.When("I click Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 383
 testRunner.Then("the Saved message should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 384
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 385
 testRunner.When("I search for the book \'Automation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 386
 testRunner.Then("the book \'Automation\' should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 387
 testRunner.When("I edit the book \'Automation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "ShortName",
                            "Description"});
                table49.AddRow(new string[] {
                            "Automation",
                            "AU",
                            "Book created by automation"});
#line 388
 testRunner.Then("the book detail screen should display as below", ((string)(null)), table49, "Then ");
#line hidden
#line 391
 testRunner.Then("the Unit section should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "LanguageFocus",
                            "Number",
                            "Phonics",
                            "Description"});
                table50.AddRow(new string[] {
                            "Automation 1",
                            "English",
                            "Unit 1",
                            "həˈlō",
                            "Created by automation"});
#line 392
 testRunner.When("I add a new unit as below", ((string)(null)), table50, "When ");
#line hidden
                TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Number",
                            "Description"});
                table51.AddRow(new string[] {
                            "Automation 1",
                            "Unit 1",
                            "Created by automation"});
#line 395
 testRunner.Then("the Unit List of the book should display as below", ((string)(null)), table51, "Then ");
#line hidden
#line 398
 testRunner.When("I search for the unit \'Automation 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 399
 testRunner.Then("the unit \'Automation 1\' should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 400
 testRunner.When("I edit the unit \'Automation 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "LanguageFocus",
                            "Number",
                            "Phonics",
                            "Description"});
                table52.AddRow(new string[] {
                            "Automation 1",
                            "English",
                            "Unit 1",
                            "həˈlō",
                            "Created by automation"});
#line 401
 testRunner.Then("unit detail page should display as below", ((string)(null)), table52, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Type",
                            "PageNumber",
                            "Description"});
                table53.AddRow(new string[] {
                            "Automation Content 1",
                            "PushAndListen",
                            "1",
                            "Created by automation"});
#line 404
 testRunner.When("I add a new content as below", ((string)(null)), table53, "When ");
#line hidden
#line 407
 testRunner.When("I edit the content \'Automation Content 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Type",
                            "PageNumber",
                            "Description"});
                table54.AddRow(new string[] {
                            "Automation Content 1",
                            "PushAndListen",
                            "1",
                            "Created by automation"});
#line 408
 testRunner.Then("content detail screen should display as below", ((string)(null)), table54, "Then ");
#line hidden
#line 411
 testRunner.Then("the Push & Listen configuration section should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Audio"});
                table55.AddRow(new string[] {
                            "Automation 1",
                            "https://youtube.com"});
                table55.AddRow(new string[] {
                            "Automation 2",
                            "https://youtube.com"});
#line 412
 testRunner.When("I configure the Push & Listen on the image as below", ((string)(null)), table55, "When ");
#line hidden
#line 416
 testRunner.When("I edit the configuration asset \'Automation 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 417
 testRunner.Then("the configuration popup should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Audio"});
                table56.AddRow(new string[] {
                            "Automation Edit",
                            "https://youtube.edit.com"});
#line 418
 testRunner.When("I change the configuration asset as below", ((string)(null)), table56, "When ");
#line hidden
#line 421
 testRunner.When("I click Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 422
 testRunner.Then("the Saved message should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 423
 testRunner.Then("the configuration asset \'Automation Edit\' should display on the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 424
 testRunner.When("I delete the configuration asset \'Automation 2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 425
 testRunner.Then("the Confirmation popup should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 426
 testRunner.When("I select No in the popup", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 427
 testRunner.Then("the Confirmation popup should dismiss", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 428
 testRunner.When("I delete the configuration asset \'Automation 2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 429
 testRunner.Then("the Confirmation popup should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 430
 testRunner.When("I select Yes in the popup", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 431
 testRunner.Then("the Saved message should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 432
 testRunner.Then("the configuration asset \'Automation 2\' should be removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CM13 - The user exports QR code of a unit")]
        [NUnit.Framework.CategoryAttribute("contentmanagement")]
        public void CM13_TheUserExportsQRCodeOfAUnit()
        {
            string[] tagsOfScenario = new string[] {
                    "contentmanagement"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CM13 - The user exports QR code of a unit", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 436
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
#line 437
 testRunner.When("I select the Content Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 438
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 439
 testRunner.When("I select Add Book button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 440
 testRunner.Then("the Add Book screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "ShortName",
                            "Description"});
                table57.AddRow(new string[] {
                            "Automation",
                            "AU",
                            "Book created by automation"});
#line 441
 testRunner.When("I add a new book as below", ((string)(null)), table57, "When ");
#line hidden
#line 444
 testRunner.Then("the Book thumbnail should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 445
 testRunner.When("I click Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 446
 testRunner.Then("the Saved message should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 447
 testRunner.Then("the Content Management screen should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 448
 testRunner.When("I search for the book \'Automation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 449
 testRunner.Then("the book \'Automation\' should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 450
 testRunner.When("I edit the book \'Automation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "ShortName",
                            "Description"});
                table58.AddRow(new string[] {
                            "Automation",
                            "AU",
                            "Book created by automation"});
#line 451
 testRunner.Then("the book detail screen should display as below", ((string)(null)), table58, "Then ");
#line hidden
#line 454
 testRunner.Then("the Unit section should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "LanguageFocus",
                            "Number",
                            "Phonics",
                            "Description"});
                table59.AddRow(new string[] {
                            "Automation 1",
                            "English",
                            "Unit 1",
                            "həˈlō",
                            "Created by automation"});
#line 455
 testRunner.When("I add a new unit as below", ((string)(null)), table59, "When ");
#line hidden
                TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Number",
                            "Description"});
                table60.AddRow(new string[] {
                            "Automation 1",
                            "Unit 1",
                            "Created by automation"});
#line 458
 testRunner.Then("the Unit List of the book should display as below", ((string)(null)), table60, "Then ");
#line hidden
#line 461
 testRunner.When("I search for the unit \'Automation 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 462
 testRunner.Then("the unit \'Automation 1\' should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 463
 testRunner.When("I edit the unit \'Automation 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "LanguageFocus",
                            "Number",
                            "Phonics",
                            "Description"});
                table61.AddRow(new string[] {
                            "Automation 1",
                            "English",
                            "Unit 1",
                            "həˈlō",
                            "Created by automation"});
#line 464
 testRunner.Then("unit detail page should display as below", ((string)(null)), table61, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Type",
                            "PageNumber",
                            "Link",
                            "Description"});
                table62.AddRow(new string[] {
                            "Automation Content 1",
                            "Read",
                            "1",
                            "https://youtube.com",
                            "Created by automation"});
                table62.AddRow(new string[] {
                            "Automation Content 2",
                            "Music",
                            "2",
                            "https://youtube.com",
                            "Created by automation"});
                table62.AddRow(new string[] {
                            "Automation Content 3",
                            "Video",
                            "3",
                            "https://youtube.com",
                            "Created by automation"});
                table62.AddRow(new string[] {
                            "Automation Content 4",
                            "Game",
                            "4",
                            "https://youtube.com",
                            "Created by automation"});
                table62.AddRow(new string[] {
                            "Automation Content 5",
                            "PushAndListen",
                            "5",
                            "",
                            "Created by automation"});
                table62.AddRow(new string[] {
                            "Automation Content 6",
                            "Record",
                            "6",
                            "",
                            "Created by automation"});
#line 467
 testRunner.When("I add a new content as below", ((string)(null)), table62, "When ");
#line hidden
#line 475
 testRunner.When("I click Export QR Code button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 476
 testRunner.Then("the Download Successfully message should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 477
 testRunner.Then("the zip file for the QR code should be downloaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 478
 testRunner.When("I extract the QR code zip file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Type"});
                table63.AddRow(new string[] {
                            "Automation Content 1",
                            "Read"});
                table63.AddRow(new string[] {
                            "Automation Content 2",
                            "Music"});
                table63.AddRow(new string[] {
                            "Automation Content 3",
                            "Video"});
                table63.AddRow(new string[] {
                            "Automation Content 4",
                            "Game"});
                table63.AddRow(new string[] {
                            "Automation Content 5",
                            "PushAndListen"});
                table63.AddRow(new string[] {
                            "Automation Content 6",
                            "Record"});
#line 479
 testRunner.Then("the list of QR code should display as below", ((string)(null)), table63, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
